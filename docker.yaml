---
# tasks file for 04-install-docker
- name: Install DOCKER
  hosts: all
  gather_facts: true
  any_errors_fatal: true
  become: yes
  tasks:
    - name: remove
      apt:
        name: "{{ p }}"
        state: absent
      vars:
        p:
          - docker-ce
          - docker-ce-cli

    - name: Update and upgrade apt packages for the first time before installing packages
      become: true
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 8640

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - git
        - software-properties-common
        - python3-pip
        - virtualenv
        - python3-setuptools

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Update and upgrade apt packages
      become: true
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 8640

    - name: Install Docker
      apt:
        name: "{{ packages_docker }}"
        state: present
      vars:
        packages_docker:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Enable Docker Service
      service:
        name: docker
        enabled: true

    - name: Start Docker Service
      service:
        name: docker
        state: started

    - name: Ensure group "docker" exists with correct gid
      group:
        name: docker
        state: present

    - name: Hold docker engine upgrade
      command: apt-mark hold docker docker-ce docker-ce-cli

    - name: systemctl daemon reload
      become: yes
      shell: systemctl daemon-reload

    - name: Restart Docker Service
      service:
        name: docker
        state: restarted

    - name: Reboot host and wait for it to restart
      reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: whoami

